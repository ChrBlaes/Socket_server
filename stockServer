using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace StockServer
{
    class Program
    {
        
        private static double IBMPrice = 36.4;
        private static double GooglePrice = 101.9;
        private static double ApplePrice = 37.4;
        private static byte[] buffer = new byte[1024];
        private static List<Socket> clientSockets = new List<Socket>();
        private static Socket serverSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);


        static void Main(string[] args)
        {
            SetupServer();
            Console.ReadKey();
        }

        private static void SetupServer()
        {
            Console.WriteLine("Waiting for client....");
            serverSocket.Bind(new IPEndPoint(IPAddress.Any, 100));
            serverSocket.Listen(1);
            serverSocket.BeginAccept(new AsyncCallback(AcceptCallBack), null);
        }

        private static void AcceptCallBack(IAsyncResult AR)
        {
            Socket socket = serverSocket.EndAccept(AR);
            clientSockets.Add(socket);
            Console.WriteLine("Client Connected");
            socket.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, new AsyncCallback(ReceiveCallBack), socket);
            serverSocket.BeginAccept(new AsyncCallback(AcceptCallBack), null);

        }

        private static void ReceiveCallBack(IAsyncResult AR)
        {
            Socket socket = (Socket)AR.AsyncState;
            int received = socket.EndReceive(AR);
            byte[] databuf = new byte[received];
            Array.Copy(buffer, databuf, received);

            string text = Encoding.ASCII.GetString(databuf);
            Console.WriteLine("Text received: " + text);

            string response = string.Empty;

            if (text.ToLower() != "get stockprice")
            {
                response = "Invalid Request";
            }
            else
            {
                fetchStockData();
                response = IBMPrice.ToString();
            }

            byte[] data = Encoding.ASCII.GetBytes(response);
            socket.BeginSend(data, 0, data.Length, SocketFlags.None, new AsyncCallback(SendCallBack), socket);
            socket.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, new AsyncCallback(ReceiveCallBack), socket);

        }
        
        private static void fetchStockData()
        {
            Random r = new Random();
            int BullOrBear = r.Next(-1, 1);
            GooglePrice = UpORDown(GooglePrice, BullOrBear);
            IBMPrice = UpORDown(IBMPrice, BullOrBear);
            ApplePrice = UpORDown(ApplePrice, BullOrBear);

        }
        private static double UpORDown(double stockprice, int BullOrBear) 
        {
            Random r = new Random();
            if (BullOrBear >= 0)
            {
                stockprice += r.NextDouble();
            }
            else
            {
                stockprice -= r.NextDouble();
            }
            return stockprice;
        }


        private static void SendCallBack(IAsyncResult AR)
        {
            Socket socket = (Socket)AR.AsyncState;
            socket.EndSend(AR);
        }
    }
}
